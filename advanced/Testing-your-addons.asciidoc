== Testing your addons

Forge offers several test harness to aid in writing tests for your addon. Each test harness has a specific role to play in testing your addon.

This chapter assumes knowledge of Arquillian, so you might find it easier to read the Arquillian tutorials at http://arquillian.org if you're not acquainted with it.

=== Setup the Furnace test harness in your project

The Furnace test harness offers the capability to deploy your and test addon to Furnace.

It is often included in your addon via the following dependencies:

[source,xml]
----

<dependency>
   <groupId>org.jboss.forge.furnace.test</groupId>
   <artifactId>furnace-test-harness</artifactId>
   <scope>test</scope>
</dependency>
<dependency>
   <groupId>org.jboss.forge.furnace.test</groupId>
   <artifactId>arquillian-furnace-classpath</artifactId>
   <scope>test</scope>
</dependency>
----

The `furnace-test-harness` artifact brings in the `junit` and `arquillian-junit-container` dependencies. You may recognize these two transitive dependencies if you're acquainted with Arquillian. They are crucial for writing and running JUnit based Arquillian tests.

You may also notice a need for an Arquillian container for the Furnace runtime. This is provided by the `arquillian-furnace-classpath` artifact. It brings in the Furnace runtime, support for making deployments to the Furnace runtime and provides APIs for deploying Forge addon dependencies.

With these two artifacts in your project, you will be able to test services offered by your addon.

==== Write your first test

Now, you'll need to create a test class with the following layout, using the standard JUnit test APIs:

[source,java]
----
package org.example;

import org.jboss.arquillian.container.test.api.Deployment;
import org.jboss.arquillian.junit.Arquillian;
import org.jboss.forge.arquillian.archive.ForgeArchive;
import org.jboss.shrinkwrap.api.ShrinkWrap;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(Arquillian.class)
public class ExampleFurnaceTest {

   @Test
   public void testSomething() throws Exception {
      Assert.fail("Not implemented");
   }
}
----

Now that the test case deploys and depends on your addon, you may access services from it via injection (if your addon has a dependency on the CDI Furnace container):

[source,java]
----
@RunWith(Arquillian.class)
public class ExampleFurnaceTest {

   @Inject
   private ExampleService service;

   @Test
   public void testSomething() throws Exception {
      Assert.assertNotNull(service);
      Assert.assertNotNull(service.doSomething());
   }
}
---- 

This is the basic premise of using the test-harness. For detailed examples, take a 
https://github.com/forge/core/tree/2.0/resources/tests/src/test/java/org/jboss/forge/addon/resource[look at some of the existing
Forge test cases] in our github repository.

NOTE: The `version` parameter in `@AddonDependency` and in the `AddonDependencyEntry.create(...)` method are optional. By not specifying them means that the test harness 
will attempt to find the version based on the tests' build descriptor (pom.xml). In this case, if the dependent addon is not present in the tests' build descriptor, the test execution should fail.

You will not be able to write and execute end-to-end tests with the Furnace test harness. That responsibility is implemented in the Shell and UI test harnesses.

=== The Shell test harness

TBD

=== The UI test harness

TBD

=== Obtaining code coverage

Code coverage may be obtained by simply running your tests with an instrumentation agent and some additional JARs in your classpath. The actual process would depend on the chosen code coverage tool.

You may however run into problems with Furnace blocking certain classes in the code coverage tool from being loaded.

For example, the following stacktrace will be reported under IntelliJ IDEA when running a test under coverage:
----
java.lang.IllegalStateException: Error launching test org.jboss.forge.addon.javaee.jpa.NewFieldWizardTest.testNewTransientField()
   at org.jboss.forge.arquillian.ForgeTestMethodExecutor.invoke(ForgeTestMethodExecutor.java:100)
   at org.jboss.arquillian.container.test.impl.execution.RemoteTestExecuter.execute(RemoteTestExecuter.java:120)
   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
   at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
   at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:99)
   at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:81)
   at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:135)
   at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:115)
   at org.jboss.arquillian.core.impl.EventImpl.fire(EventImpl.java:67)
   at org.jboss.arquillian.container.test.impl.execution.ClientTestExecuter.execute(ClientTestExecuter.java:57)
   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
   at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
   at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:99)
   at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:81)
   at org.jboss.arquillian.container.test.impl.client.ContainerEventController.createContext(ContainerEventController.java:142)
   at org.jboss.arquillian.container.test.impl.client.ContainerEventController.createTestContext(ContainerEventController.java:129)
   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
   at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
   at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)
   at org.jboss.arquillian.test.impl.TestContextHandler.createTestContext(TestContextHandler.java:102)
   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
   at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
   at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)
   at org.jboss.arquillian.test.impl.TestContextHandler.createSuiteContext(TestContextHandler.java:65)
   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
   at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
   at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)
   at org.jboss.arquillian.test.impl.TestContextHandler.createClassContext(TestContextHandler.java:84)
   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
   at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
   at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)
   at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:135)
   at org.jboss.arquillian.test.impl.EventTestRunnerAdaptor.test(EventTestRunnerAdaptor.java:111)
   at org.jboss.arquillian.junit.Arquillian$6.evaluate(Arquillian.java:263)
   at org.jboss.arquillian.junit.Arquillian$4.evaluate(Arquillian.java:226)
   at org.jboss.arquillian.junit.Arquillian.multiExecute(Arquillian.java:314)
   at org.jboss.arquillian.junit.Arquillian.access$100(Arquillian.java:46)
   at org.jboss.arquillian.junit.Arquillian$5.evaluate(Arquillian.java:240)
   at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
   at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
   at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
   at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
   at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
   at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
   at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
   at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
   at org.jboss.arquillian.junit.Arquillian$2.evaluate(Arquillian.java:185)
   at org.jboss.arquillian.junit.Arquillian.multiExecute(Arquillian.java:314)
   at org.jboss.arquillian.junit.Arquillian.access$100(Arquillian.java:46)
   at org.jboss.arquillian.junit.Arquillian$3.evaluate(Arquillian.java:199)
   at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
   at org.jboss.arquillian.junit.Arquillian.run(Arquillian.java:147)
   at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
   at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:74)
   at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:202)
   at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:65)
   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
   at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)
Caused by: org.jboss.forge.furnace.exception.ContainerException: Failed to enhance instance of [class org.jboss.forge.addon.javaee.jpa.NewFieldWizardTest] with proxy for ClassLoader [ModuleClassLoader for Module "_DEFAULT_:e402a613-64ca-4471-86e1-9b72d8c9f104_46ab4dbc-1920-4a79-82fa-fc6f0df64c7e" from AddonModuleLoader]
   at org.jboss.forge.furnace.container.cdi.services.ExportedInstanceImpl.get(ExportedInstanceImpl.java:73)
   at org.jboss.forge.arquillian.ForgeTestMethodExecutor.invoke(ForgeTestMethodExecutor.java:81)
   ... 78 more
Caused by: javax.enterprise.inject.CreationException
   at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
   at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
   at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
   at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
   at java.lang.Class.newInstance(Class.java:374)
   at org.jboss.weld.security.NewInstanceAction.run(NewInstanceAction.java:33)
   at java.security.AccessController.doPrivileged(Native Method)
   at org.jboss.weld.injection.Exceptions.rethrowException(Exceptions.java:40)
   at org.jboss.weld.injection.Exceptions.rethrowException(Exceptions.java:50)
   at org.jboss.weld.injection.Exceptions.rethrowException(Exceptions.java:90)
   at org.jboss.weld.injection.ConstructorInjectionPoint.newInstance(ConstructorInjectionPoint.java:118)
   at org.jboss.weld.injection.ConstructorInjectionPoint.invokeAroundConstructCallbacks(ConstructorInjectionPoint.java:84)
   at org.jboss.weld.injection.ConstructorInjectionPoint.newInstance(ConstructorInjectionPoint.java:71)
   at org.jboss.weld.injection.producer.AbstractInstantiator.newInstance(AbstractInstantiator.java:28)
   at org.jboss.weld.injection.producer.BasicInjectionTarget.produce(BasicInjectionTarget.java:86)
   at org.jboss.weld.injection.producer.BeanInjectionTarget.produce(BeanInjectionTarget.java:186)
   at org.jboss.weld.bean.ManagedBean.create(ManagedBean.java:157)
   at org.jboss.weld.context.unbound.DependentContextImpl.get(DependentContextImpl.java:69)
   at org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:742)
   at org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:762)
   at org.jboss.weld.util.ForwardingBeanManager.getReference(ForwardingBeanManager.java:61)
   at org.jboss.weld.bean.builtin.BeanManagerProxy.getReference(BeanManagerProxy.java:74)
   at org.jboss.forge.furnace.container.cdi.services.ExportedInstanceImpl$1.call(ExportedInstanceImpl.java:61)
   at org.jboss.forge.furnace.util.ClassLoaders.executeIn(ClassLoaders.java:34)
   at org.jboss.forge.furnace.container.cdi.services.ExportedInstanceImpl.get(ExportedInstanceImpl.java:69)
   ... 79 more
Caused by: java.lang.NoClassDefFoundError: com/intellij/rt/coverage/data/ProjectData
   at org.jboss.forge.addon.javaee.jpa.NewFieldWizardTest.<init>(NewFieldWizardTest.java)
   at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
   at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
   at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
   at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
   at org.jboss.weld.injection.ConstructorInjectionPoint.newInstance(ConstructorInjectionPoint.java:110)
Caused by: java.lang.ClassNotFoundException: com.intellij.rt.coverage.data.ProjectData from [Module "_DEFAULT_:e402a613-64ca-4471-86e1-9b72d8c9f104_46ab4dbc-1920-4a79-82fa-fc6f0df64c7e" from AddonModuleLoader]
   at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:197)
   at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:443)
   at org.jboss.modules.ConcurrentClassLoader.performLoadClassChecked(ConcurrentClassLoader.java:431)
   at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:373)
   at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:118)
   ... 99 more
----

To overcome this, ensure that Furnace is configured to not block loading of these classes. It can be done by designating the necessary packages on the system classpath:
----
-Djboss.modules.system.pkgs=com.intellij.rt.coverage.data
----

The packages to add would depend on the code coverage tool.
